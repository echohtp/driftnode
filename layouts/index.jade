doctype html
html(lang="en")
	head
		title Driftnode

		link(rel="stylesheet", type="css/text", href="css/bootstrap.css")
		script(type="text/javascript", src="js/jquery.js")
		script(type="text/javascript", src="http://#{host}:#{port}/socket.io/socket.io.js")
		script(type="text/javascript", src="js/underscore.js")
		script(type="text/javascript", src="js/masonry.pkgd.min.js")
		script(type="text/javascript", src="js/backbone.js")

		script.
			$(function(){
			var Model = Backbone.Model.extend({
				url: '',
				render: function(){
					var template = _.template( $('#imageTemplate').html() );
					console.log(this.attributes);
					
					var size = 0, key, url ='';

					for (key in this.attributes){
						if (this.attributes.hasOwnProperty(key)) size++;
					}

					for (var c = 0; c < size ; c++){
						url += this.attributes[c];
					}

					if ( url.indexOf('jpg') > 0 || url.indexOf('jpeg') > 0|| url.indexOf('jpg') > 0  || url.indexOf('gif') > 0 ){
						var html = template({url: url });
						var hitem = $(html);
						$('#imageContainer').append(hitem);
						

						$('#imageContainer').masonry( { columnWidth: 60, itemSelector: '.m-item' });
						$('#imageContainer').masonry('appended', hitem);

						console.log('appending url: ' + url);

					}
					
				}
			});

			var mCollection = Backbone.Collection.extend({
				model: Model
			});
			var imageCollection = new mCollection();

			socket = io();

			socket.on('image found', function(msg){
				var tM = new Model(msg.url);
				imageCollection.add(tM);
				tM.render();

			});
			});

	body
		h1 Driftnode - v0.0.1
		div(id="imageContainer", class="js-masonry", data-masonry-options='{  "itemSelector": ".item"  }')

			


	script(type="text/template", id="imageTemplate").
			<div class="m-item" style="margin-bottom:10px; border: 0px solid black">
				<img class="img-responsive" src="<%- url %>"/>
			</div>









